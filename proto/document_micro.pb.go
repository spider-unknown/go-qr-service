// Code generated by protoc-gen-micro
// source: document.proto
package pb

import (
	context "context"
	api "github.com/unistack-org/micro/v3/api"
	client "github.com/unistack-org/micro/v3/client"
	codec "github.com/unistack-org/micro/v3/codec"
)

func NewDocumentQRProcessingServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{
		&api.Endpoint{
			Name:    "DocumentQRProcessingService.GetDocumentQR",
			Path:    []string{"/document/{document_id}"},
			Method:  []string{"GET"},
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "DocumentQRProcessingService.PostDocumentQR",
			Path:    []string{"/document/{document_id}"},
			Method:  []string{"POST"},
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "DocumentQRProcessingService.PostQRImage",
			Path:    []string{"/document/{document_id}/image"},
			Method:  []string{"GET"},
			Handler: "rpc",
		},
		&api.Endpoint{
			Name:    "DocumentQRProcessingService.PostNewDocument",
			Path:    []string{"/new/document"},
			Method:  []string{"POST"},
			Handler: "rpc",
		},
	}
}

type DocumentQRProcessingServiceClient interface {
	GetDocumentQR(ctx context.Context, req *PostQRRequest, opts ...client.CallOption) (*PostQRResponse, error)
	PostDocumentQR(ctx context.Context, req *PostQRRequest, opts ...client.CallOption) (*PostQRResponse, error)
	PostQRImage(ctx context.Context, req *PostQRRequest, opts ...client.CallOption) (*codec.Frame, error)
	PostNewDocument(ctx context.Context, req *PostNewDocumentRequest, opts ...client.CallOption) (*PostNewDocumentResponse, error)
}

type DocumentQRProcessingServiceServer interface {
	GetDocumentQR(ctx context.Context, req *PostQRRequest, rsp *PostQRResponse) error
	PostDocumentQR(ctx context.Context, req *PostQRRequest, rsp *PostQRResponse) error
	PostQRImage(ctx context.Context, req *PostQRRequest, rsp *codec.Frame) error
	PostNewDocument(ctx context.Context, req *PostNewDocumentRequest, rsp *PostNewDocumentResponse) error
}
